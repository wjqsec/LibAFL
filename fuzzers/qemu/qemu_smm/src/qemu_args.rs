use std::vec::*;
use std::string::*;
pub fn gen_ovmf_qemu_args() -> Vec<String>
{
    vec![
        "qemu-system-x86_64".to_string(),
        "-machine".to_string(),
        "q35,smm=on,accel=tcg".to_string(),
        "-global".to_string(),
        "driver=cfi.pflash01,property=secure,value=on".to_string(),
        "-drive".to_string(),
        "if=pflash,format=raw,unit=0,file=/home/w/hd/uefi_fuzz/fuzzer/edk2/Build/OvmfX64/RELEASE_GCC5/FV/OVMF_CODE.fd,readonly=on".to_string(),
        "-drive".to_string(),
        "if=pflash,format=raw,unit=1,file=/home/w/hd/uefi_fuzz/fuzzer/edk2/Build/OvmfX64/RELEASE_GCC5/FV/OVMF_VARS.fd".to_string(),
        "-hda".to_string(),
        "/home/w/hd/uefi_fuzz/fuzzer/run/smmfuzz.img".to_string(),
        "-debugcon".to_string(),
        "file:debug.log".to_string(),
        "-global".to_string(),
        "isa-debugcon.iobase=0x402".to_string(),
        "-L".to_string(),
        "/usr/local/share/qemu_smm/".to_string(),
        "-nographic".to_string(),

    ]
}
pub fn get_snapshot_dev_filter_list() -> Vec<String>    
{
    vec![
        "timer".to_string(),
        "cpu_common".to_string(),
        "cpu".to_string(),
        "kvm-tpr-opt".to_string(),
        "apic".to_string(),
        "pflash_cfi01".to_string(),
        "pflash_cfi01".to_string(),
        "fw_cfg".to_string(),
        "0000:00:00.0/mch".to_string(),
        "PCIHost".to_string(),
        "PCIBUS".to_string(),
        "dma".to_string(),
        "dma".to_string(),
        "mc146818rtc".to_string(),
        "0000:00:1f.0/ICH9LPC".to_string(),
        "i8259".to_string(),
        "i8259".to_string(),
        "ioapic".to_string(),
        "hpet".to_string(),
        "i8254".to_string(),
        "pcspk".to_string(),
        "serial".to_string(),
        "parallel_isa".to_string(),
        "ps2kbd".to_string(),
        "ps2mouse".to_string(),
        "pckbd".to_string(),
        "vmmouse".to_string(),
        "port92".to_string(),
        "0000:00:1f.2/ich9_ahci".to_string(),
        "i2c_bus".to_string(),
        "0000:00:1f.3/ich9_smb".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "smbus-eeprom".to_string(),
        "0000:00:01.0/vga".to_string(),
        "0000:00:02.0/e1000e".to_string(),
        "acpi_build".to_string(),
    ]
}